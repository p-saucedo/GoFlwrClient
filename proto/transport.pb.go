// Copyright 2020 Adap GmbH. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ==============================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: transport.proto

package __goflwr

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Code int32

const (
	Code_OK                             Code = 0
	Code_GET_PROPERTIES_NOT_IMPLEMENTED Code = 1
	Code_GET_PARAMETERS_NOT_IMPLEMENTED Code = 2
	Code_FIT_NOT_IMPLEMENTED            Code = 3
	Code_EVALUATE_NOT_IMPLEMENTED       Code = 4
)

// Enum value maps for Code.
var (
	Code_name = map[int32]string{
		0: "OK",
		1: "GET_PROPERTIES_NOT_IMPLEMENTED",
		2: "GET_PARAMETERS_NOT_IMPLEMENTED",
		3: "FIT_NOT_IMPLEMENTED",
		4: "EVALUATE_NOT_IMPLEMENTED",
	}
	Code_value = map[string]int32{
		"OK":                             0,
		"GET_PROPERTIES_NOT_IMPLEMENTED": 1,
		"GET_PARAMETERS_NOT_IMPLEMENTED": 2,
		"FIT_NOT_IMPLEMENTED":            3,
		"EVALUATE_NOT_IMPLEMENTED":       4,
	}
)

func (x Code) Enum() *Code {
	p := new(Code)
	*p = x
	return p
}

func (x Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Code) Descriptor() protoreflect.EnumDescriptor {
	return file_transport_proto_enumTypes[0].Descriptor()
}

func (Code) Type() protoreflect.EnumType {
	return &file_transport_proto_enumTypes[0]
}

func (x Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Code.Descriptor instead.
func (Code) EnumDescriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{0}
}

type Reason int32

const (
	Reason_UNKNOWN            Reason = 0
	Reason_RECONNECT          Reason = 1
	Reason_POWER_DISCONNECTED Reason = 2
	Reason_WIFI_UNAVAILABLE   Reason = 3
	Reason_ACK                Reason = 4
)

// Enum value maps for Reason.
var (
	Reason_name = map[int32]string{
		0: "UNKNOWN",
		1: "RECONNECT",
		2: "POWER_DISCONNECTED",
		3: "WIFI_UNAVAILABLE",
		4: "ACK",
	}
	Reason_value = map[string]int32{
		"UNKNOWN":            0,
		"RECONNECT":          1,
		"POWER_DISCONNECTED": 2,
		"WIFI_UNAVAILABLE":   3,
		"ACK":                4,
	}
)

func (x Reason) Enum() *Reason {
	p := new(Reason)
	*p = x
	return p
}

func (x Reason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Reason) Descriptor() protoreflect.EnumDescriptor {
	return file_transport_proto_enumTypes[1].Descriptor()
}

func (Reason) Type() protoreflect.EnumType {
	return &file_transport_proto_enumTypes[1]
}

func (x Reason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Reason.Descriptor instead.
func (Reason) EnumDescriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{1}
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code   `protobuf:"varint,1,opt,name=code,proto3,enum=flwr.proto.Code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{0}
}

func (x *Status) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_OK
}

func (x *Status) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Parameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tensors    [][]byte `protobuf:"bytes,1,rep,name=tensors,proto3" json:"tensors,omitempty"`
	TensorType string   `protobuf:"bytes,2,opt,name=tensor_type,json=tensorType,proto3" json:"tensor_type,omitempty"`
}

func (x *Parameters) Reset() {
	*x = Parameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parameters) ProtoMessage() {}

func (x *Parameters) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parameters.ProtoReflect.Descriptor instead.
func (*Parameters) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{1}
}

func (x *Parameters) GetTensors() [][]byte {
	if x != nil {
		return x.Tensors
	}
	return nil
}

func (x *Parameters) GetTensorType() string {
	if x != nil {
		return x.TensorType
	}
	return ""
}

type ServerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Msg:
	//
	//	*ServerMessage_ReconnectIns_
	//	*ServerMessage_GetPropertiesIns_
	//	*ServerMessage_GetParametersIns_
	//	*ServerMessage_FitIns_
	//	*ServerMessage_EvaluateIns_
	Msg isServerMessage_Msg `protobuf_oneof:"msg"`
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{2}
}

func (m *ServerMessage) GetMsg() isServerMessage_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *ServerMessage) GetReconnectIns() *ServerMessage_ReconnectIns {
	if x, ok := x.GetMsg().(*ServerMessage_ReconnectIns_); ok {
		return x.ReconnectIns
	}
	return nil
}

func (x *ServerMessage) GetGetPropertiesIns() *ServerMessage_GetPropertiesIns {
	if x, ok := x.GetMsg().(*ServerMessage_GetPropertiesIns_); ok {
		return x.GetPropertiesIns
	}
	return nil
}

func (x *ServerMessage) GetGetParametersIns() *ServerMessage_GetParametersIns {
	if x, ok := x.GetMsg().(*ServerMessage_GetParametersIns_); ok {
		return x.GetParametersIns
	}
	return nil
}

func (x *ServerMessage) GetFitIns() *ServerMessage_FitIns {
	if x, ok := x.GetMsg().(*ServerMessage_FitIns_); ok {
		return x.FitIns
	}
	return nil
}

func (x *ServerMessage) GetEvaluateIns() *ServerMessage_EvaluateIns {
	if x, ok := x.GetMsg().(*ServerMessage_EvaluateIns_); ok {
		return x.EvaluateIns
	}
	return nil
}

type isServerMessage_Msg interface {
	isServerMessage_Msg()
}

type ServerMessage_ReconnectIns_ struct {
	ReconnectIns *ServerMessage_ReconnectIns `protobuf:"bytes,1,opt,name=reconnect_ins,json=reconnectIns,proto3,oneof"`
}

type ServerMessage_GetPropertiesIns_ struct {
	GetPropertiesIns *ServerMessage_GetPropertiesIns `protobuf:"bytes,2,opt,name=get_properties_ins,json=getPropertiesIns,proto3,oneof"`
}

type ServerMessage_GetParametersIns_ struct {
	GetParametersIns *ServerMessage_GetParametersIns `protobuf:"bytes,3,opt,name=get_parameters_ins,json=getParametersIns,proto3,oneof"`
}

type ServerMessage_FitIns_ struct {
	FitIns *ServerMessage_FitIns `protobuf:"bytes,4,opt,name=fit_ins,json=fitIns,proto3,oneof"`
}

type ServerMessage_EvaluateIns_ struct {
	EvaluateIns *ServerMessage_EvaluateIns `protobuf:"bytes,5,opt,name=evaluate_ins,json=evaluateIns,proto3,oneof"`
}

func (*ServerMessage_ReconnectIns_) isServerMessage_Msg() {}

func (*ServerMessage_GetPropertiesIns_) isServerMessage_Msg() {}

func (*ServerMessage_GetParametersIns_) isServerMessage_Msg() {}

func (*ServerMessage_FitIns_) isServerMessage_Msg() {}

func (*ServerMessage_EvaluateIns_) isServerMessage_Msg() {}

type ClientMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Msg:
	//
	//	*ClientMessage_DisconnectRes_
	//	*ClientMessage_GetPropertiesRes_
	//	*ClientMessage_GetParametersRes_
	//	*ClientMessage_FitRes_
	//	*ClientMessage_EvaluateRes_
	Msg isClientMessage_Msg `protobuf_oneof:"msg"`
}

func (x *ClientMessage) Reset() {
	*x = ClientMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessage) ProtoMessage() {}

func (x *ClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessage.ProtoReflect.Descriptor instead.
func (*ClientMessage) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{3}
}

func (m *ClientMessage) GetMsg() isClientMessage_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *ClientMessage) GetDisconnectRes() *ClientMessage_DisconnectRes {
	if x, ok := x.GetMsg().(*ClientMessage_DisconnectRes_); ok {
		return x.DisconnectRes
	}
	return nil
}

func (x *ClientMessage) GetGetPropertiesRes() *ClientMessage_GetPropertiesRes {
	if x, ok := x.GetMsg().(*ClientMessage_GetPropertiesRes_); ok {
		return x.GetPropertiesRes
	}
	return nil
}

func (x *ClientMessage) GetGetParametersRes() *ClientMessage_GetParametersRes {
	if x, ok := x.GetMsg().(*ClientMessage_GetParametersRes_); ok {
		return x.GetParametersRes
	}
	return nil
}

func (x *ClientMessage) GetFitRes() *ClientMessage_FitRes {
	if x, ok := x.GetMsg().(*ClientMessage_FitRes_); ok {
		return x.FitRes
	}
	return nil
}

func (x *ClientMessage) GetEvaluateRes() *ClientMessage_EvaluateRes {
	if x, ok := x.GetMsg().(*ClientMessage_EvaluateRes_); ok {
		return x.EvaluateRes
	}
	return nil
}

type isClientMessage_Msg interface {
	isClientMessage_Msg()
}

type ClientMessage_DisconnectRes_ struct {
	DisconnectRes *ClientMessage_DisconnectRes `protobuf:"bytes,1,opt,name=disconnect_res,json=disconnectRes,proto3,oneof"`
}

type ClientMessage_GetPropertiesRes_ struct {
	GetPropertiesRes *ClientMessage_GetPropertiesRes `protobuf:"bytes,2,opt,name=get_properties_res,json=getPropertiesRes,proto3,oneof"`
}

type ClientMessage_GetParametersRes_ struct {
	GetParametersRes *ClientMessage_GetParametersRes `protobuf:"bytes,3,opt,name=get_parameters_res,json=getParametersRes,proto3,oneof"`
}

type ClientMessage_FitRes_ struct {
	FitRes *ClientMessage_FitRes `protobuf:"bytes,4,opt,name=fit_res,json=fitRes,proto3,oneof"`
}

type ClientMessage_EvaluateRes_ struct {
	EvaluateRes *ClientMessage_EvaluateRes `protobuf:"bytes,5,opt,name=evaluate_res,json=evaluateRes,proto3,oneof"`
}

func (*ClientMessage_DisconnectRes_) isClientMessage_Msg() {}

func (*ClientMessage_GetPropertiesRes_) isClientMessage_Msg() {}

func (*ClientMessage_GetParametersRes_) isClientMessage_Msg() {}

func (*ClientMessage_FitRes_) isClientMessage_Msg() {}

func (*ClientMessage_EvaluateRes_) isClientMessage_Msg() {}

type Scalar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The following `oneof` contains all types that ProtoBuf considers to be
	// "Scalar Value Types". Commented-out types are listed for reference and
	// might be enabled in future releases. Source:
	// https://developers.google.com/protocol-buffers/docs/proto3#scalar
	//
	// Types that are assignable to Scalar:
	//
	//	*Scalar_Double
	//	*Scalar_Sint64
	//	*Scalar_Bool
	//	*Scalar_String_
	//	*Scalar_Bytes
	Scalar isScalar_Scalar `protobuf_oneof:"scalar"`
}

func (x *Scalar) Reset() {
	*x = Scalar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scalar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scalar) ProtoMessage() {}

func (x *Scalar) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scalar.ProtoReflect.Descriptor instead.
func (*Scalar) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{4}
}

func (m *Scalar) GetScalar() isScalar_Scalar {
	if m != nil {
		return m.Scalar
	}
	return nil
}

func (x *Scalar) GetDouble() float64 {
	if x, ok := x.GetScalar().(*Scalar_Double); ok {
		return x.Double
	}
	return 0
}

func (x *Scalar) GetSint64() int64 {
	if x, ok := x.GetScalar().(*Scalar_Sint64); ok {
		return x.Sint64
	}
	return 0
}

func (x *Scalar) GetBool() bool {
	if x, ok := x.GetScalar().(*Scalar_Bool); ok {
		return x.Bool
	}
	return false
}

func (x *Scalar) GetString_() string {
	if x, ok := x.GetScalar().(*Scalar_String_); ok {
		return x.String_
	}
	return ""
}

func (x *Scalar) GetBytes() []byte {
	if x, ok := x.GetScalar().(*Scalar_Bytes); ok {
		return x.Bytes
	}
	return nil
}

type isScalar_Scalar interface {
	isScalar_Scalar()
}

type Scalar_Double struct {
	Double float64 `protobuf:"fixed64,1,opt,name=double,proto3,oneof"`
}

type Scalar_Sint64 struct {
	// float float = 2;
	// int32 int32 = 3;
	// int64 int64 = 4;
	// uint32 uint32 = 5;
	// uint64 uint64 = 6;
	// sint32 sint32 = 7;
	Sint64 int64 `protobuf:"zigzag64,8,opt,name=sint64,proto3,oneof"`
}

type Scalar_Bool struct {
	// fixed32 fixed32 = 9;
	// fixed64 fixed64 = 10;
	// sfixed32 sfixed32 = 11;
	// sfixed64 sfixed64 = 12;
	Bool bool `protobuf:"varint,13,opt,name=bool,proto3,oneof"`
}

type Scalar_String_ struct {
	String_ string `protobuf:"bytes,14,opt,name=string,proto3,oneof"`
}

type Scalar_Bytes struct {
	Bytes []byte `protobuf:"bytes,15,opt,name=bytes,proto3,oneof"`
}

func (*Scalar_Double) isScalar_Scalar() {}

func (*Scalar_Sint64) isScalar_Scalar() {}

func (*Scalar_Bool) isScalar_Scalar() {}

func (*Scalar_String_) isScalar_Scalar() {}

func (*Scalar_Bytes) isScalar_Scalar() {}

type ServerMessage_ReconnectIns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seconds int64 `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
}

func (x *ServerMessage_ReconnectIns) Reset() {
	*x = ServerMessage_ReconnectIns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMessage_ReconnectIns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage_ReconnectIns) ProtoMessage() {}

func (x *ServerMessage_ReconnectIns) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage_ReconnectIns.ProtoReflect.Descriptor instead.
func (*ServerMessage_ReconnectIns) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ServerMessage_ReconnectIns) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

type ServerMessage_GetPropertiesIns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config map[string]*Scalar `protobuf:"bytes,1,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ServerMessage_GetPropertiesIns) Reset() {
	*x = ServerMessage_GetPropertiesIns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMessage_GetPropertiesIns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage_GetPropertiesIns) ProtoMessage() {}

func (x *ServerMessage_GetPropertiesIns) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage_GetPropertiesIns.ProtoReflect.Descriptor instead.
func (*ServerMessage_GetPropertiesIns) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{2, 1}
}

func (x *ServerMessage_GetPropertiesIns) GetConfig() map[string]*Scalar {
	if x != nil {
		return x.Config
	}
	return nil
}

type ServerMessage_GetParametersIns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config map[string]*Scalar `protobuf:"bytes,1,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ServerMessage_GetParametersIns) Reset() {
	*x = ServerMessage_GetParametersIns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMessage_GetParametersIns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage_GetParametersIns) ProtoMessage() {}

func (x *ServerMessage_GetParametersIns) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage_GetParametersIns.ProtoReflect.Descriptor instead.
func (*ServerMessage_GetParametersIns) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{2, 2}
}

func (x *ServerMessage_GetParametersIns) GetConfig() map[string]*Scalar {
	if x != nil {
		return x.Config
	}
	return nil
}

type ServerMessage_FitIns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parameters *Parameters        `protobuf:"bytes,1,opt,name=parameters,proto3" json:"parameters,omitempty"`
	Config     map[string]*Scalar `protobuf:"bytes,2,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ServerMessage_FitIns) Reset() {
	*x = ServerMessage_FitIns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMessage_FitIns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage_FitIns) ProtoMessage() {}

func (x *ServerMessage_FitIns) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage_FitIns.ProtoReflect.Descriptor instead.
func (*ServerMessage_FitIns) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{2, 3}
}

func (x *ServerMessage_FitIns) GetParameters() *Parameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *ServerMessage_FitIns) GetConfig() map[string]*Scalar {
	if x != nil {
		return x.Config
	}
	return nil
}

type ServerMessage_EvaluateIns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parameters *Parameters        `protobuf:"bytes,1,opt,name=parameters,proto3" json:"parameters,omitempty"`
	Config     map[string]*Scalar `protobuf:"bytes,2,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ServerMessage_EvaluateIns) Reset() {
	*x = ServerMessage_EvaluateIns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMessage_EvaluateIns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage_EvaluateIns) ProtoMessage() {}

func (x *ServerMessage_EvaluateIns) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage_EvaluateIns.ProtoReflect.Descriptor instead.
func (*ServerMessage_EvaluateIns) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{2, 4}
}

func (x *ServerMessage_EvaluateIns) GetParameters() *Parameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *ServerMessage_EvaluateIns) GetConfig() map[string]*Scalar {
	if x != nil {
		return x.Config
	}
	return nil
}

type ClientMessage_DisconnectRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason Reason `protobuf:"varint,1,opt,name=reason,proto3,enum=flwr.proto.Reason" json:"reason,omitempty"`
}

func (x *ClientMessage_DisconnectRes) Reset() {
	*x = ClientMessage_DisconnectRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMessage_DisconnectRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessage_DisconnectRes) ProtoMessage() {}

func (x *ClientMessage_DisconnectRes) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessage_DisconnectRes.ProtoReflect.Descriptor instead.
func (*ClientMessage_DisconnectRes) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ClientMessage_DisconnectRes) GetReason() Reason {
	if x != nil {
		return x.Reason
	}
	return Reason_UNKNOWN
}

type ClientMessage_GetPropertiesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     *Status            `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Properties map[string]*Scalar `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ClientMessage_GetPropertiesRes) Reset() {
	*x = ClientMessage_GetPropertiesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMessage_GetPropertiesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessage_GetPropertiesRes) ProtoMessage() {}

func (x *ClientMessage_GetPropertiesRes) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessage_GetPropertiesRes.ProtoReflect.Descriptor instead.
func (*ClientMessage_GetPropertiesRes) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{3, 1}
}

func (x *ClientMessage_GetPropertiesRes) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ClientMessage_GetPropertiesRes) GetProperties() map[string]*Scalar {
	if x != nil {
		return x.Properties
	}
	return nil
}

type ClientMessage_GetParametersRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     *Status     `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Parameters *Parameters `protobuf:"bytes,2,opt,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *ClientMessage_GetParametersRes) Reset() {
	*x = ClientMessage_GetParametersRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMessage_GetParametersRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessage_GetParametersRes) ProtoMessage() {}

func (x *ClientMessage_GetParametersRes) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessage_GetParametersRes.ProtoReflect.Descriptor instead.
func (*ClientMessage_GetParametersRes) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{3, 2}
}

func (x *ClientMessage_GetParametersRes) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ClientMessage_GetParametersRes) GetParameters() *Parameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type ClientMessage_FitRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      *Status            `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Parameters  *Parameters        `protobuf:"bytes,2,opt,name=parameters,proto3" json:"parameters,omitempty"`
	NumExamples int64              `protobuf:"varint,3,opt,name=num_examples,json=numExamples,proto3" json:"num_examples,omitempty"`
	Metrics     map[string]*Scalar `protobuf:"bytes,4,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ClientMessage_FitRes) Reset() {
	*x = ClientMessage_FitRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMessage_FitRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessage_FitRes) ProtoMessage() {}

func (x *ClientMessage_FitRes) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessage_FitRes.ProtoReflect.Descriptor instead.
func (*ClientMessage_FitRes) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{3, 3}
}

func (x *ClientMessage_FitRes) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ClientMessage_FitRes) GetParameters() *Parameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *ClientMessage_FitRes) GetNumExamples() int64 {
	if x != nil {
		return x.NumExamples
	}
	return 0
}

func (x *ClientMessage_FitRes) GetMetrics() map[string]*Scalar {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type ClientMessage_EvaluateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      *Status            `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Loss        float32            `protobuf:"fixed32,2,opt,name=loss,proto3" json:"loss,omitempty"`
	NumExamples int64              `protobuf:"varint,3,opt,name=num_examples,json=numExamples,proto3" json:"num_examples,omitempty"`
	Metrics     map[string]*Scalar `protobuf:"bytes,4,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ClientMessage_EvaluateRes) Reset() {
	*x = ClientMessage_EvaluateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMessage_EvaluateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessage_EvaluateRes) ProtoMessage() {}

func (x *ClientMessage_EvaluateRes) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessage_EvaluateRes.ProtoReflect.Descriptor instead.
func (*ClientMessage_EvaluateRes) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{3, 4}
}

func (x *ClientMessage_EvaluateRes) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ClientMessage_EvaluateRes) GetLoss() float32 {
	if x != nil {
		return x.Loss
	}
	return 0
}

func (x *ClientMessage_EvaluateRes) GetNumExamples() int64 {
	if x != nil {
		return x.NumExamples
	}
	return 0
}

func (x *ClientMessage_EvaluateRes) GetMetrics() map[string]*Scalar {
	if x != nil {
		return x.Metrics
	}
	return nil
}

var File_transport_proto protoreflect.FileDescriptor

var file_transport_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x66, 0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x48, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x66, 0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x47, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x22, 0xf2, 0x09, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x4d, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x66, 0x6c, 0x77, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e,
	0x73, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e,
	0x73, 0x12, 0x5a, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x66, 0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x10, 0x67, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x73, 0x12, 0x5a, 0x0a,
	0x12, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x5f,
	0x69, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x66, 0x6c, 0x77, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x49, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x10, 0x67, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x07, 0x66, 0x69, 0x74,
	0x5f, 0x69, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6c, 0x77,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x74, 0x49, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x06,
	0x66, 0x69, 0x74, 0x49, 0x6e, 0x73, 0x12, 0x4a, 0x0a, 0x0c, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66,
	0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x1a, 0x28, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49,
	0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x1a, 0xb1, 0x01, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x49, 0x6e,
	0x73, 0x12, 0x4e, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x66, 0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x73, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x1a, 0x4d, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x63, 0x61, 0x6c, 0x61, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0xb1, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x49, 0x6e, 0x73, 0x12, 0x4e, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x66, 0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x49, 0x6e,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x4d, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0xd5, 0x01, 0x0a, 0x06, 0x46, 0x69, 0x74, 0x49, 0x6e, 0x73, 0x12,
	0x36, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0a, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x44, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x66, 0x6c, 0x77, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x46, 0x69, 0x74, 0x49, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x4d, 0x0a,
	0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x66, 0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61,
	0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xdf, 0x01, 0x0a,
	0x0b, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x12, 0x36, 0x0a, 0x0a,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x66, 0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x49, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x66, 0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a,
	0x4d, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x66, 0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61,
	0x6c, 0x61, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x05,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x8a, 0x0b, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x50, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x66, 0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x12, 0x67, 0x65, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x66, 0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x48, 0x00, 0x52, 0x10, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x66, 0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52,
	0x10, 0x67, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x12, 0x3b, 0x0a, 0x07, 0x66, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x74, 0x52, 0x65, 0x73, 0x12, 0x4a,
	0x0a, 0x0c, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x65,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x66, 0x6c,
	0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x1a, 0xed, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66,
	0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5a, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x66,
	0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x1a, 0x51, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6c, 0x77, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x76, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6c,
	0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6c,
	0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a,
	0xa8, 0x02, 0x0a, 0x06, 0x46, 0x69, 0x74, 0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6c, 0x77,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x6c, 0x77,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x12, 0x47, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x66, 0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x1a, 0x4e, 0x0a, 0x0c, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6c,
	0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x8e, 0x02, 0x0a, 0x0b, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6c, 0x77,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6c, 0x6f, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x75,
	0x6d, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x4c, 0x0a,
	0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x66, 0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x1a, 0x4e, 0x0a, 0x0c, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66,
	0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x8e, 0x01, 0x0a, 0x06, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x12, 0x18, 0x0a,
	0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52,
	0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x48, 0x00, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x12, 0x14, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x16, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x00, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x63, 0x61,
	0x6c, 0x61, 0x72, 0x2a, 0x8d, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a, 0x02,
	0x4f, 0x4b, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x47, 0x45, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x50,
	0x45, 0x52, 0x54, 0x49, 0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4d, 0x50, 0x4c, 0x45,
	0x4d, 0x45, 0x4e, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x47, 0x45, 0x54, 0x5f,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x49,
	0x4d, 0x50, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13,
	0x46, 0x49, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x4d, 0x45, 0x4e,
	0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x56, 0x41, 0x4c, 0x55, 0x41, 0x54,
	0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x45,
	0x44, 0x10, 0x04, 0x2a, 0x5b, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45,
	0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x4f, 0x57,
	0x45, 0x52, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x14, 0x0a, 0x10, 0x57, 0x49, 0x46, 0x49, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49,
	0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x43, 0x4b, 0x10, 0x04,
	0x32, 0x53, 0x0a, 0x0d, 0x46, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x42, 0x0a, 0x04, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x19, 0x2e, 0x66, 0x6c, 0x77, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x19, 0x2e, 0x66, 0x6c, 0x77, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x67, 0x6f, 0x66, 0x6c, 0x77, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transport_proto_rawDescOnce sync.Once
	file_transport_proto_rawDescData = file_transport_proto_rawDesc
)

func file_transport_proto_rawDescGZIP() []byte {
	file_transport_proto_rawDescOnce.Do(func() {
		file_transport_proto_rawDescData = protoimpl.X.CompressGZIP(file_transport_proto_rawDescData)
	})
	return file_transport_proto_rawDescData
}

var file_transport_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_transport_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_transport_proto_goTypes = []interface{}{
	(Code)(0),                              // 0: flwr.proto.Code
	(Reason)(0),                            // 1: flwr.proto.Reason
	(*Status)(nil),                         // 2: flwr.proto.Status
	(*Parameters)(nil),                     // 3: flwr.proto.Parameters
	(*ServerMessage)(nil),                  // 4: flwr.proto.ServerMessage
	(*ClientMessage)(nil),                  // 5: flwr.proto.ClientMessage
	(*Scalar)(nil),                         // 6: flwr.proto.Scalar
	(*ServerMessage_ReconnectIns)(nil),     // 7: flwr.proto.ServerMessage.ReconnectIns
	(*ServerMessage_GetPropertiesIns)(nil), // 8: flwr.proto.ServerMessage.GetPropertiesIns
	(*ServerMessage_GetParametersIns)(nil), // 9: flwr.proto.ServerMessage.GetParametersIns
	(*ServerMessage_FitIns)(nil),           // 10: flwr.proto.ServerMessage.FitIns
	(*ServerMessage_EvaluateIns)(nil),      // 11: flwr.proto.ServerMessage.EvaluateIns
	nil,                                    // 12: flwr.proto.ServerMessage.GetPropertiesIns.ConfigEntry
	nil,                                    // 13: flwr.proto.ServerMessage.GetParametersIns.ConfigEntry
	nil,                                    // 14: flwr.proto.ServerMessage.FitIns.ConfigEntry
	nil,                                    // 15: flwr.proto.ServerMessage.EvaluateIns.ConfigEntry
	(*ClientMessage_DisconnectRes)(nil),    // 16: flwr.proto.ClientMessage.DisconnectRes
	(*ClientMessage_GetPropertiesRes)(nil), // 17: flwr.proto.ClientMessage.GetPropertiesRes
	(*ClientMessage_GetParametersRes)(nil), // 18: flwr.proto.ClientMessage.GetParametersRes
	(*ClientMessage_FitRes)(nil),           // 19: flwr.proto.ClientMessage.FitRes
	(*ClientMessage_EvaluateRes)(nil),      // 20: flwr.proto.ClientMessage.EvaluateRes
	nil,                                    // 21: flwr.proto.ClientMessage.GetPropertiesRes.PropertiesEntry
	nil,                                    // 22: flwr.proto.ClientMessage.FitRes.MetricsEntry
	nil,                                    // 23: flwr.proto.ClientMessage.EvaluateRes.MetricsEntry
}
var file_transport_proto_depIdxs = []int32{
	0,  // 0: flwr.proto.Status.code:type_name -> flwr.proto.Code
	7,  // 1: flwr.proto.ServerMessage.reconnect_ins:type_name -> flwr.proto.ServerMessage.ReconnectIns
	8,  // 2: flwr.proto.ServerMessage.get_properties_ins:type_name -> flwr.proto.ServerMessage.GetPropertiesIns
	9,  // 3: flwr.proto.ServerMessage.get_parameters_ins:type_name -> flwr.proto.ServerMessage.GetParametersIns
	10, // 4: flwr.proto.ServerMessage.fit_ins:type_name -> flwr.proto.ServerMessage.FitIns
	11, // 5: flwr.proto.ServerMessage.evaluate_ins:type_name -> flwr.proto.ServerMessage.EvaluateIns
	16, // 6: flwr.proto.ClientMessage.disconnect_res:type_name -> flwr.proto.ClientMessage.DisconnectRes
	17, // 7: flwr.proto.ClientMessage.get_properties_res:type_name -> flwr.proto.ClientMessage.GetPropertiesRes
	18, // 8: flwr.proto.ClientMessage.get_parameters_res:type_name -> flwr.proto.ClientMessage.GetParametersRes
	19, // 9: flwr.proto.ClientMessage.fit_res:type_name -> flwr.proto.ClientMessage.FitRes
	20, // 10: flwr.proto.ClientMessage.evaluate_res:type_name -> flwr.proto.ClientMessage.EvaluateRes
	12, // 11: flwr.proto.ServerMessage.GetPropertiesIns.config:type_name -> flwr.proto.ServerMessage.GetPropertiesIns.ConfigEntry
	13, // 12: flwr.proto.ServerMessage.GetParametersIns.config:type_name -> flwr.proto.ServerMessage.GetParametersIns.ConfigEntry
	3,  // 13: flwr.proto.ServerMessage.FitIns.parameters:type_name -> flwr.proto.Parameters
	14, // 14: flwr.proto.ServerMessage.FitIns.config:type_name -> flwr.proto.ServerMessage.FitIns.ConfigEntry
	3,  // 15: flwr.proto.ServerMessage.EvaluateIns.parameters:type_name -> flwr.proto.Parameters
	15, // 16: flwr.proto.ServerMessage.EvaluateIns.config:type_name -> flwr.proto.ServerMessage.EvaluateIns.ConfigEntry
	6,  // 17: flwr.proto.ServerMessage.GetPropertiesIns.ConfigEntry.value:type_name -> flwr.proto.Scalar
	6,  // 18: flwr.proto.ServerMessage.GetParametersIns.ConfigEntry.value:type_name -> flwr.proto.Scalar
	6,  // 19: flwr.proto.ServerMessage.FitIns.ConfigEntry.value:type_name -> flwr.proto.Scalar
	6,  // 20: flwr.proto.ServerMessage.EvaluateIns.ConfigEntry.value:type_name -> flwr.proto.Scalar
	1,  // 21: flwr.proto.ClientMessage.DisconnectRes.reason:type_name -> flwr.proto.Reason
	2,  // 22: flwr.proto.ClientMessage.GetPropertiesRes.status:type_name -> flwr.proto.Status
	21, // 23: flwr.proto.ClientMessage.GetPropertiesRes.properties:type_name -> flwr.proto.ClientMessage.GetPropertiesRes.PropertiesEntry
	2,  // 24: flwr.proto.ClientMessage.GetParametersRes.status:type_name -> flwr.proto.Status
	3,  // 25: flwr.proto.ClientMessage.GetParametersRes.parameters:type_name -> flwr.proto.Parameters
	2,  // 26: flwr.proto.ClientMessage.FitRes.status:type_name -> flwr.proto.Status
	3,  // 27: flwr.proto.ClientMessage.FitRes.parameters:type_name -> flwr.proto.Parameters
	22, // 28: flwr.proto.ClientMessage.FitRes.metrics:type_name -> flwr.proto.ClientMessage.FitRes.MetricsEntry
	2,  // 29: flwr.proto.ClientMessage.EvaluateRes.status:type_name -> flwr.proto.Status
	23, // 30: flwr.proto.ClientMessage.EvaluateRes.metrics:type_name -> flwr.proto.ClientMessage.EvaluateRes.MetricsEntry
	6,  // 31: flwr.proto.ClientMessage.GetPropertiesRes.PropertiesEntry.value:type_name -> flwr.proto.Scalar
	6,  // 32: flwr.proto.ClientMessage.FitRes.MetricsEntry.value:type_name -> flwr.proto.Scalar
	6,  // 33: flwr.proto.ClientMessage.EvaluateRes.MetricsEntry.value:type_name -> flwr.proto.Scalar
	5,  // 34: flwr.proto.FlowerService.Join:input_type -> flwr.proto.ClientMessage
	4,  // 35: flwr.proto.FlowerService.Join:output_type -> flwr.proto.ServerMessage
	35, // [35:36] is the sub-list for method output_type
	34, // [34:35] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_transport_proto_init() }
func file_transport_proto_init() {
	if File_transport_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transport_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scalar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMessage_ReconnectIns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMessage_GetPropertiesIns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMessage_GetParametersIns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMessage_FitIns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMessage_EvaluateIns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMessage_DisconnectRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMessage_GetPropertiesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMessage_GetParametersRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMessage_FitRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMessage_EvaluateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_transport_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ServerMessage_ReconnectIns_)(nil),
		(*ServerMessage_GetPropertiesIns_)(nil),
		(*ServerMessage_GetParametersIns_)(nil),
		(*ServerMessage_FitIns_)(nil),
		(*ServerMessage_EvaluateIns_)(nil),
	}
	file_transport_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*ClientMessage_DisconnectRes_)(nil),
		(*ClientMessage_GetPropertiesRes_)(nil),
		(*ClientMessage_GetParametersRes_)(nil),
		(*ClientMessage_FitRes_)(nil),
		(*ClientMessage_EvaluateRes_)(nil),
	}
	file_transport_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Scalar_Double)(nil),
		(*Scalar_Sint64)(nil),
		(*Scalar_Bool)(nil),
		(*Scalar_String_)(nil),
		(*Scalar_Bytes)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transport_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_transport_proto_goTypes,
		DependencyIndexes: file_transport_proto_depIdxs,
		EnumInfos:         file_transport_proto_enumTypes,
		MessageInfos:      file_transport_proto_msgTypes,
	}.Build()
	File_transport_proto = out.File
	file_transport_proto_rawDesc = nil
	file_transport_proto_goTypes = nil
	file_transport_proto_depIdxs = nil
}
